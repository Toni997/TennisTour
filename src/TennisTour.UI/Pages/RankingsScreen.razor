@page "/rankings"
@using MudBlazor
@using TennisTour.Application.Models.Rankings;
@using TennisTour.UI.AuthProviders;
@using TennisTour.UI.Common;
@inject HttpClient httpClient

@if (Rankings == null)
{
	<MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
} else
{
	<MudDataGrid T="RankingsModel" Items="@Rankings" ReadOnly="true" Bordered="true" Filterable="true" FilterMode="DataGridFilterMode.Simple" FilterCaseSensitivity="DataGridFilterCaseSensitivity.CaseInsensitive">
		<Columns>
			<PropertyColumn Property="x => x.Rank" />
			<PropertyColumn Property="x => x.ContenderInfo.FirstName" Title="First name" />
			<PropertyColumn Property="x => x.ContenderInfo.LastName" Title="Last name" />
			<PropertyColumn Property="x => x.Points" Title="Points" />
			<PropertyColumn Property="x => x.PreviousPoints" Title="Previous points" />
			<PropertyColumn Property="x => x.PreviousRank" Title="Previous rank" />
			<PropertyColumn Property="x => x.BestRank" Title="Best rank" />
			<PropertyColumn Property="x => x.BestRankDate" Title="Best rank date" />
		</Columns>
		<PagerContent>
			<MudDataGridPager T="RankingsModel" />
		</PagerContent>
	</MudDataGrid>

}



@code {
	private List<RankingsModel> Rankings { get; set; }

	

	protected override async Task OnInitializedAsync() 
	{
		await LoadRankings();
	}


	private async Task LoadRankings()
	{
		Rankings = await httpClient.GetFromJsonAsync<List<RankingsModel>>(ApiConstants.RankingsGet);
	}

}
