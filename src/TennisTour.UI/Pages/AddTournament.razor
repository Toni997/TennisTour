@page "/tournaments/add"
@using TennisTour.Application.Models.Validators.Tournament
@using TennisTour.Application.Models.Tournament

@attribute [Authorize(Roles = Roles.Admin)]

<PageTitle>Add Tournament | Tennis Tour</PageTitle>

<MudText Typo="Typo.h1" GutterBottom="true">Add Tournament</MudText>

<MudDivider DividerType="DividerType.Middle" Class="my-6" />

<MudCard>
    <TournamentForm model="@model" Submit="@Submit"/>
</MudCard>

@code {
    [Inject] ISnackbar Snackbar { get; set; }

    private UpsertTournamentModel model = new UpsertTournamentModel();

    private async Task Submit()
    {
        try
        {
            var content = new JsonNewtonContent(model);
            var response = await HttpClient.PostAsync(ApiConstants.TournamentsAddRoute, content);

            var responseContent = await response.Content.ReadAsStringAsync();
            var result = JsonConvert.DeserializeObject<ApiResult<UpsertTournamentResponseModel>>(responseContent);

            if (response.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo(String.Format(UiConstants.TournamentDetailsRoute, result?.Result.Id));
                Snackbar.Add("Successfully added a tournament.", Severity.Success);
            }
            else
            {
                Snackbar.Add("Successfully added a tournament.", Severity.Error);
            }
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"HTTP request failed: {ex.Message}");
        }
    }
}
