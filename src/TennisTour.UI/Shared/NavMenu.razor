@using TennisTour.UI.AuthProviders;
<MudNavMenu>
    <AuthorizeView Roles="@Roles.User">
        <MudText Class="px-3" Color="Color.Primary">
            Logged in as <MudLink Style="font-weight: bold;" Href="@(context.User.IsInRole(Roles.Contender) ? String.Format(UiConstants.ContenderDetailsRoute, context.User.FindFirst("nameid")?.Value) : UiConstants.MyProfileRoute)">@context.User.Identity?.Name</MudLink>
        </MudText>
    </AuthorizeView>
    <MudNavLink Href="@UiConstants.HomeRoute" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
    <MudNavLink Href="@UiConstants.TournamentsRoute" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">Tournaments</MudNavLink>
    <MudNavLink Href="@UiConstants.ScheduleRoute" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.CalendarMonth">Schedule</MudNavLink>
    <MudNavLink Href="rankings" Match="NavLinkMatch.Prefix" Icon="@MaterialDesignIcons.Normal.Trophy">Rankings</MudNavLink>
	<AuthorizeView>
	    <Authorized>
            <MudNavLink Href="@UiConstants.MyProfileRoute" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Settings">My Profile</MudNavLink>
            <MudNavLink Href="@UiConstants.MyFavoritesRoute" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Favorite">My Favorites</MudNavLink>
            <MudDivider DividerType="DividerType.Middle" Class="my-3" />
            <MudNavLink OnClick="Logout" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Logout">Logout</MudNavLink>
		</Authorized>
		<NotAuthorized>
            <MudDivider DividerType="DividerType.Middle" Class="my-3" />
            <MudNavLink Href="@UiConstants.LoginRoute" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Login">Login</MudNavLink>
            <MudNavLink Href="@UiConstants.RegisterRoute" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.AppRegistration">Register</MudNavLink>
		</NotAuthorized>
	</AuthorizeView>
</MudNavMenu>

@code {
	@inject NavigationManager NavigationManager;
	[Inject]
	private AuthenticationStateProvider AuthenticationStateProvider { get; set; }

	async void Logout()
	{
		await ((UiAuthStateProvider)AuthenticationStateProvider).Logout();
		NavigationManager.NavigateTo(UiConstants.LoginRoute);
	}
}
